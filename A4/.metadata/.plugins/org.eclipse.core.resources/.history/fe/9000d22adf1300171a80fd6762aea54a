/*
 * This is the implementation of the broadcasting mechanism between
 * processors. You may implement this using sockets, but this is not required. It is sufficient to
 * implement some delays to simulate sending and receiving messages. One BroadcastSystem
 * object is shared between all BroadcastAgents. The broadcastSystem executes in a separate
 * thread.
 */
public class BroadcastSystem extends Thread{
	
	//array with length n(10)
	public static int array1[] = new int[Processor.n];
	
	public BroadcastSystem(){
		//initalize the array 
		for(int d = 0; d <= 9; d++ ){
			if(array1[d] == 0){
				array1[d] = -1;
			}	
		}
	}
	
	public void run(){
		boolean check = false;
		
		while(check == false){
			
			boolean j = false;
			for(int i = 0; i <= 9; i++){
				int k = array1[i];
				
				if(k != -1){
					j  = true;
				}
				
			}
			
			check = true;
			//sleep for a bit before looping
			try{
				Thread.sleep(500);
			}
			catch(InterruptedException e){
				System.out.println(e);
			}
			
		}
				
	}

}
